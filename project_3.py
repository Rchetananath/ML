# -*- coding: utf-8 -*-
"""PROJECT_3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I3lBfiqhcCgPU3AghIfEiG8rBD3kNf3F
"""

import pandas as pd
import matplotlib.pyplot as plt
iris = pd.read_csv('iris.csv')

iris.head()

len(iris['class'])

for col in iris.columns:
  print(col)

iris.groupby('class').size()

import seaborn as sns

plt.figure(figsize=(15,10))
plt.subplot(2,2,1)
sns.boxplot(x='class',y='sepallength',data=iris)
plt.subplot(2,2,2)
sns.boxplot(x='class',y='sepalwidth',data=iris)
plt.subplot(2,2,3)
sns.boxplot(x='class',y='petallength',data=iris)
plt.subplot(2,2,4)
sns.boxplot(x='class',y='petalwidth',data=iris)

iris.isnull().values.any()

iris.head()

x=iris.iloc[:,:-1].values
y=iris.iloc[:,-1].values

x

y

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.33,random_state=42)

from sklearn.svm import SVC
svc = SVC()
svc.fit(x_train,y_train)
y_pred=svc.predict(x_test)

from sklearn.metrics import accuracy_score
accuracy_score(y_test,y_pred)

from sklearn.tree import DecisionTreeClassifier
dtc = DecisionTreeClassifier()
dtc.fit(x_train,y_train)
y_pred=dtc.predict(x_test)
accuracy_score(y_test,y_pred)

from sklearn.linear_model import LogisticRegression
lr = LogisticRegression()
lr.fit(x_train,y_train)
y_pred=lr.predict(x_test)
round(accuracy_score(y_test,y_pred),2)*100